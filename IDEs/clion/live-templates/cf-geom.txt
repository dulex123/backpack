struct Point {
    double x, y;
    Point() {}
    Point(double x, double y) : x(x), y(y) {}
    Point(const Point& p) : x(p.x), y(p.y) {}
    Point operator + (const Point& p) const {
        return Point(x+p.x, y+p.y);
    }
    Point operator - (const Point& p) const {
        return Point(x-p.x, y-p.y);
    }
    Point operator * (double c) const {
        return Point(x*c, y*c);
    }
    Point operator / (double c) const {
        return Point(x / c, y / c);
    }

};

/* Cross product */
double cross(Point p, Point q) { return p.x * q.y - p.y * q.x; }

/* Dot product */
double dot(Point p, Point q) { return p.x * q.x + p.y * q.y; }

/* Distance between two points */
double dist(Point p, Point q) { return sqrt(dot(p-q, p-q)); }

/* Point of intersection between two lines defined by two points */
Point Intersection(Point a, Point b, Point c, Point d) {
    b=b-a;
    d=c-d;
    c=c-a;
    return a+b*cross(c,d)/cross(b,d);
}
